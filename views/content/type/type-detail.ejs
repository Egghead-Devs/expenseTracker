<div class="kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid" >
    <div id="action" ></div>
      
	<div class="">
	    <h6 class="text-danger" id="errDisplay"></h6>
	</div>
    <div class="row">
        <div class="col-xl-6" id="typeDetail">

            <div class="kt-spinner kt-spinner--sm kt-spinner--success kt-spinner--center kt-spinner--input">
                <input  type="text" class="form-control"/>
            </div>
        </div>
        <div class="col-xl-6">
    		<div class="kt-portlet__head">
    			<div class="kt-portlet__head-label">
    				<h3 class="kt-portlet__head-title">
    					HTML(DOM) Sourced Data <%= user.firstname %>
    				</h3>
    			</div>
    			<div class="kt-portlet__head-toolbar">
    				<div class="kt-portlet__head-wrapper">
    					<div class="kt-input-icon kt-input-icon--left">
    						<input type="text" class="form-control" placeholder="Search..." id="generalSearch">
    						<span class="kt-input-icon__icon kt-input-icon__icon--left">
    							<span><i class="la la-search"></i></span>
    						</span>
    					</div>
    					<!-- Modal -->
    					
    				</div>
    			</div>
    		</div>
    		<div class="kt-portlet__body">
    
    			<!--begin: Datatable -->
    			<div class="kt_datatable" id="local_data"></div>
    			
    
    			<!--end: Datatable -->
    		</div>
    	</div>
    </div>
</div>

<!--begin::Modal-->
<div class="modal fade" id="editType" role="dialog" aria-labelledby="" aria-hidden="true">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="">Edit Type</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true" class="la la-remove"></span>
				</button>
			</div>
			<form class="kt-form kt-form--fit kt-form--label-right" action="#" id="updateType" onsubmit="submitType(event)">
  			<div class="modal-body" id="typeForm">
  			  <div class="form-group">
  						<label>Type Name:</label>
  						<input type="text" name="type_name" id="type_name" value="<%= type.type_name %>" class="form-control" placeholder="Type Name">
  						<span class="form-text text-muted">Please enter the type name</span>
  					</div>
  			</div>
  			<div class="modal-footer">
  				<button type="submit" class="btn btn-brand" id="typeUpdateBtn" >Update</button>
  			</div>
			</form>
			
		</div>
	</div>
</div>
<!--end::Modal-->

<script>
const userId = `<%= user.id %>`;
const userRoleId = `<%= user.RoleId %>`;
const typeId = `<%= id %>`;
const submitBtn = document.getElementById('typeUpdateBtn');

submitBtn.addEventListener('click', ()=>{
  submitBtn.innerHTML = '<i class="kt-spinner kt-spinner--md kt-spinner--center px-4 kt-spinner--light"></i>';
});

const submitType = async (event) => {
	try {
  event.preventDefault();
  //const form = event.target;
  const form = document.getElementById('updateType');
  const formData = { type_name: form.type_name.value }
  
  console.log(formData);
  
  
    const type = await updateType(formData);
    let errors = '';
    console.log(type);
    if (type.status) {
      swal.fire(
        'Awesome!',
        'Type Name Updated!',
        'success'
      )
      location.href = `/type/${typeId}`;
    } else {
      submitBtn.innerHTML = 'Update Type';
      for (let i = 0; i < type.errors.length; i++) {
        errors += type.errors[i].msg;
        if (i < type.errors.length - 1) errors += ', ';
      }
      console.log(errors);
      document.getElementById('errDisplay').innerHTML = errors;
      swal.fire(
        'Oops!',
        `Operation unsuccessful!`,
        'error'
      )
    }
  } catch (error) {
    console.log(error);
    // show network error notification
    swal.fire(
      'Oops!',
      'An error was encountered! Please review your network connection.',
      'error'
    )
  }

};

const updateType = async (data) => {
    console.log(data)
    try {
      const type = await fetch(`${Route.apiRoot}/type/${typeId}/update`, {
        // mode: 'no-cors',
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
      });
      return await type.json();
    } catch (error) {
      console.log(error);
      // show network error notification
      swal.fire(
        'Oops!',
        'An error was encountered! Please review your network connection.',
        'error'
      )
    }
  };
  
 const deleteType = async ()=>{
    try {
      const type = await fetch(`${Route.apiRoot}/type/${typeId}/delete`, {
        // mode: 'no-cors',
        method: 'POST'
      });
      let response = await type.json();
      if (response.status) {
        swal.fire(
            'Sucessful!',
            'Expense deleted successfully!',
            'success'
          )
          location.href = `/types`;
      }
    } catch (error) {
      console.log(error);
      // show network error notification
      swal.fire(
        'Oops!',
        'An error was encountered! Please review your network connection.',
        'error'
      )
    }
  }
  
  
  async function action() {
    try {
      
      if (`${userRoleId}` == 1) { 
        document.getElementById('action').innerHTML = `
            <div class="dropdown dropdown-block text-right">
                <span class="d-inline-block" tabindex="0" data-toggle="kt-tooltip" data-skin="brand" title="More options">
                    <button type="button" class="btn btn-hover-brand btn-elevate-hover btn-icon btn-sm btn-icon-md btn-circle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                      <i class="flaticon-more-1"></i>
                    </button>
              		<div class="dropdown-menu" aria-labelledby="dropdownMenuButton" id="userAction">
                        <button type="button" class="dropdown-item" data-toggle="modal" data-target="#editType">
                          Edit
                        </button>
                        <a class="dropdown-item text-danger" onclick="deleteExpense()">Delete</a>    
              		</div>
              	</span>
        	</div>
      	  
        `;
      }
    } catch (error) {
      console.log('this is the error ' + error);
    }
  }
  action();
  
</script>