<div class="kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid" >
    <div id="action" ></div>
      
  <div class="">
      <h6 class="text-danger" id="errDisplay"></h6>
  </div>
  
  <div class="kt-portlet kt-portlet--mobile">
		<div class="kt-portlet__head kt-portlet__head--lg">
			<div class="kt-portlet__head-label">
				<h3 class="kt-portlet__head-title">
					List of all expenses for "<%= type.type_name %>" type
				</h3>
			</div>
		</div>
	
		<div class="kt-portlet__body">
			<% if (type.Expenses.length == 0 ) { %>
			  <div class="alert alert-light alert-elevate" role="alert">
      		<div class="alert-icon"><i class="flaticon-warning kt-font-brand"></i></div>
      		<div class="alert-text">
      			<h3 class="kt-portlet__head-title">
      			  No expenses created yet for this type
      			</h3>
      		</div>
      	</div>
			<% } else { %>
  			<!--begin: Datatable -->
  			
  			<table class="table table-striped- table-bordered table-hover table-checkable" id="kt_table_1">
  				<thead>
  					<tr>
  						<th>Title</th>
  						<th>Amount</th>
  						<th>Status</th>
  						<th>Employee</th>
  						<th>Time</th>
  						<th>Actions</th>
  					</tr>
  				</thead>
  				<tbody>
  					<% type.Expenses.forEach(function(expense) { %>
    					<% 
    						const type = (expense.status == 'Approved') ? 'success' 
    			              : (expense.status == 'Pending') ? 'warning' 
    			              : (expense.status == 'Declined') ? 'danger'
    			              : null;
    		             %>
    					<tr>
    						<td><a href="/expense/<%= expense.id %>"><%= expense.title %></a></td>
    						<td>â‚¦ <%= Number (expense.amount || 0).toLocaleString(); %></td>
    						<td><span class="kt-badge kt-badge--<%=type%> kt-badge--inline kt-badge--pill"><%= expense.status %></span></td>
    						<td><%= expense.user.firstname %> <%= expense.user.lastname %></td>
    						<td><%= moment(expense.createdAt).fromNow() %></td>
    						<td nowrap> 
    							<a href="/expense/<%= expense.id %>" class="btn btn-sm btn-clean btn-icon btn-icon-md" title="View">
    								<i class="la la-eye"></i>
    							</a>
    							<% if (expense.status == 'Pending') { %>
    							<a class="btn btn-sm btn-clean btn-icon btn-icon-md" title="Delete" onclick="deleteExpense(<%=expense.id%>)">
    								<i class="la la-trash"></i>
    							</a>
    							<% } %>
    							
    						</td>
    					</tr>
  					<% }); %>
  					
  				</tbody>
  			</table>
  
  			<!--end: Datatable -->
			<% } %>
		</div>
	</div>
    
</div>

<script>
  const userId = `<%= user.id %>`;
  const userRole = `<%= user.Role.role_name %>`;
  const typeId = `<%= id %>`;
  
  const deleteType = async (id) => {
      Swal.fire({
          title: 'Are you sure?',
          text: "This action cannot be reversible!",
          type: 'warning',
          showCancelButton: true,
          confirmButtonColor: '#3085d6',
          cancelButtonColor: '#d33',
          confirmButtonText: 'Yes, Delete it!'
      }).then(async (result) => {
          if (result.value) {
              try {
                  const type = await fetch(`${Route.apiRoot}/type/${typeId}/delete`, {
                      // mode: 'no-cors',
                      method: 'POST'
                  });
                  let response = await type.json();
                  if (response.status) {
                      swal.fire(
                          'Sucessful!',
                          'Type deleted successfully!',
                          'success'
                      )
                      location.href = `/types`;
                  }
              } catch (error) {
                  console.log(error);
                  // show network error notification
                  swal.fire(
                      'Oops!',
                      'An error was encountered! Please review your network connection.',
                      'error'
                  )
              }
          }
      });
  }
  
  const deleteExpense = async (expenseId) => {
      Swal.fire({
          title: 'Are you sure?',
          text: "This action cannot be reversible!",
          type: 'warning',
          showCancelButton: true,
          confirmButtonColor: '#3085d6',
          cancelButtonColor: '#d33',
          confirmButtonText: 'Yes, Delete it!'
      }).then(async (result) => {
          if (result.value) {
              try {
                  const expense = await fetch(`${Route.apiRoot}/expense/${expenseId}/delete`, {
                      // mode: 'no-cors',
                      method: 'POST'
                  });
                  let response = await expense.json();
                  if (response.status) {
                      swal.fire(
                          'Sucessful!',
                          'Expense deleted successfully!',
                          'success'
                      )
                      location.href = `/allExpenses`;
                  }
              } catch (error) {
                  console.log(error);
                  // show network error notification
                  swal.fire(
                      'Oops!',
                      'An error was encountered! Please review your network connection.',
                      'error'
                  )
              }
          }
      });
  }
  
  async function action() {
      try {
  
          if (`${userRole}` == 'Manager') {
              document.getElementById('action').innerHTML = `
              <div class="dropdown dropdown-block text-right">
                  <span class="d-inline-block" tabindex="0" data-toggle="kt-tooltip" data-skin="brand" title="More options">
                      <button type="button" class="btn btn-hover-brand btn-elevate-hover btn-icon btn-sm btn-icon-md btn-circle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <i class="flaticon-more-1"></i>
                      </button>
                		<div class="dropdown-menu" aria-labelledby="dropdownMenuButton" id="userAction">
                          <a class="dropdown-item text-danger" onclick="deleteType()">Delete</a>    
                		</div>
                	</span>
          	</div>
        	  
          `;
          }
      } catch (error) {
          console.log('this is the error ' + error);
      }
  }
  action();
  
</script>