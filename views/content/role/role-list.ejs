<div class="kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid">
	<div class="kt-portlet">
			<div class="kt-portlet__head">
				<div class="kt-portlet__head-label">
					<h3 class="kt-portlet__head-title">All Employee Roles</h3>
				</div>
				<div class="">
					<h6 class="text-danger" id="errDisplay"></h6>
				</div>
				<div class="kt-portlet__head-toolbar">
					<div class="kt-portlet__head-wrapper">
						<a href="#" class="btn btn-brand btn-bold btn-upper btn-font-sm" data-toggle="modal" data-target="#createRoleModal">
							<i class="la la-plus"></i>
							Create New
						</a>
						<!-- Modal -->
						<div class="modal fade" id="createRoleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
							<div class="modal-dialog" role="document">
								<div class="modal-content">
									<div class="modal-header">
										<h5 class="modal-title" id="exampleModalLabel">Create New Role</h5>
										<button type="button" class="close" data-dismiss="modal" aria-label="Close">
											<span aria-hidden="true">&times;</span>
										</button>
									</div>
									<form class="kt-form kt-form--fit kt-form--label-right" action="#" id="createRole" onsubmit="submitRole(event)">
										<div class="modal-body">
											<div class="form-group">
												<label>Department Name:</label>
												<input type="text" name="role_name" id="role_name" class="form-control" placeholder="Role Name">
												<span class="form-text text-muted">Please enter the role name</span>
											</div>
										</div>
										<div class="modal-footer">
											<button type="button" class="btn btn-outline-brand" data-dismiss="modal">Close</button>
											<button type="submit" class="btn btn-brand" id="roleSubmitBtn">Create</button>
										</div>
									</form>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
			
			<div class="kt-portlet__body">
				<div class="kt-section">
					<div class="kt-section__content kt-section__content--border">
						<% if (roles == 'None'){ %>
							<div class="alert alert-light alert-elevate" role="alert">
			              		<div class="alert-icon"><i class="flaticon-warning kt-font-brand"></i></div>
			              		<div class="alert-text">
			              			<h3 class="kt-portlet__head-title">
			              			  No Roles created
			              			</h3>
			              		</div>
			              	</div>
			            <% } else { %>
							<% roles.forEach(function(role) { %>
								<div class="list-group">
									<a href="/role/<%= role.id %>" class="list-group-item list-group-item-action flex-column align-items-start">
										<div class="d-flex w-100 justify-content-between">
											<h5 class="mb-1"><%= role.role_name %></h5>
											<small><%= moment(role.createdAt).fromNow() %></small>
										</div>
									</a>
								</div>
							<% }); %>
						<% } %>
					</div>
				</div>
			</div>
		</div>
</div>

<script>
	const userId = `<%= user.id %>`;
	const currentBusinessId = `<%= user.CurrentBusinessId %>`;
	const submitBtn = document.getElementById('roleSubmitBtn');
	
	submitBtn.addEventListener('click', ()=>{
	  submitBtn.innerHTML = '<i class="kt-spinner kt-spinner--md kt-spinner--center px-4 kt-spinner--light"></i>';
	});
	
	const submitRole = async (event) => {
		try {
	  event.preventDefault();
	  const form = document.getElementById('createRole');
	  const formData = {
	          role_name: form.role_name.value,
	          current_business: currentBusinessId,
	        }
	  
	  console.log(formData);
	  
	    const role = await createRole(formData);
	    let errors = '';
	    console.log(role);
	    if (role.status) {
	      swal.fire(
	        'Awesome!',
	        'Role created!',
	        'success'
	      )
	      location.href = `/roles`;
	    } else {
	      submitBtn.innerHTML = 'Create';
	      for (let i = 0; i < role.errors.length; i++) {
	        errors += role.errors[i].msg;
	        if (i < role.errors.length - 1) errors += ', ';
	      }
	      console.log(errors);
	      document.getElementById('errDisplay').innerHTML = errors;
	      swal.fire(
	        'Oops!',
	        `Operation was not successful!`,
	        'error'
	      )
	    }
	  } catch (error) {
	    console.log(error);
	    // show network error notification
	    swal.fire(
	      'Oops!',
	      'An error was encountered! Please review your network connection.',
	      'error'
	    )
	  }
	
	};
	
	const createRole = async (data) => {
	    console.log(data)
	    try {
	      const role = await fetch(`${Route.apiRoot}/role/create`, {
	        // mode: 'no-cors',
	        method: 'POST',
	        headers: {
	          'Content-Type': 'application/json'
	        },
	        body: JSON.stringify(data)
	      });
	      return await role.json();
	    } catch (error) {
	      console.log(error);
	      // show network error notification
	      swal.fire(
	        'Oops!',
	        'An error was encountered! Please review your network connection.',
	        'error'
	      )
	    }
	  };
</script>